{"version":3,"file":"static/js/236.db67d3f5.chunk.js","mappings":"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","sources":["components/notification/index.tsx","components/pageSizeSelect/index.tsx","components/pagination/OnePage.tsx","components/pagination/CollapsedPages.tsx","components/pagination/index.tsx","constants/fixedText/notifications.ts","components/picturePreview/index.tsx","components/albumCard/index.tsx","pages/albums/components/filterByUser/dropDownList/index.tsx","constants/enums/selectOptions.ts","pages/albums/components/filterByUser/index.tsx","pages/albums/index.tsx","services/api/albums/index.ts","services/api/users/index.ts"],"sourcesContent":["import React from 'react';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport { TNotification } from './type';\r\nimport { IoWarning } from 'react-icons/io5';\r\nimport { MdError } from 'react-icons/md';\r\nimport { FaCircleInfo } from 'react-icons/fa6';\r\n\r\nconst Notification: React.FC<TNotification> = ({ msg, size, type }) => {\r\n  let icon;\r\n  switch (type) {\r\n    case 'warning':\r\n      icon = <IoWarning />;\r\n      break;\r\n    case 'error':\r\n      icon = <MdError />;\r\n      break;\r\n    case 'info':\r\n      icon = <FaCircleInfo />;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <article className={`flex grow align-middle justify-center text-${size}`}>\r\n      <p\r\n        className={`text-${COLOR_MAIN}-700 dark:text-${COLOR_MAIN}-500 place-self-center h-min pr-1`}\r\n      >\r\n        {icon}\r\n      </p>\r\n      <p\r\n        className={`text-${COLOR_CONTRAST}-700 dark:text-${COLOR_CONTRAST}-300 \r\n        h-min place-self-center`}\r\n      >\r\n        {msg}\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { PAGE_ALBUMS_SIZES } from 'constants/enums/pageSizes';\r\nimport { TPageSizeSelectProps } from './type';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport { useAppSelector } from 'utils/hooks/useRedux';\r\n\r\n\r\nconst PageSizeSelect: React.FC<TPageSizeSelectProps> = (props) => {\r\n  const { pageSizes, pageSize, onChange } = props;\r\n\r\n  return (\r\n    <div className=\"h-20 py-4 flex items-center\">\r\n      <label className=\"flex justify-between place-items-center space-x-1\">\r\n        <p\r\n          className={`text-lg text-${COLOR_CONTRAST}-900 dark:text-${COLOR_CONTRAST}-300`}\r\n        >\r\n          Отображать на странице:\r\n        </p>\r\n        <select\r\n          defaultValue={pageSize}\r\n          className={`max-h-7 w-10 text-center px-2 focus:outline-none appearance-none\r\n          dark:bg-${COLOR_MAIN}-700\r\n          rounded-sm border-2 border-${COLOR_MAIN}-600 dark:border-${COLOR_MAIN}-700\r\n          text-${COLOR_CONTRAST}-900 dark:text-${COLOR_CONTRAST}-300 cursor-pointer`}\r\n          onChange={(e) => onChange(e)}\r\n        >\r\n          {pageSizes.map((option) => (\r\n            <option\r\n              key={option}\r\n              className={`text-${COLOR_CONTRAST}-900 dark:text-${COLOR_CONTRAST}-300`}\r\n            >\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageSizeSelect;\r\n","import React from 'react';\r\nimport { TOnePage } from './type';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport classNames from 'classnames';\r\n\r\nconst OnePage: React.FC<TOnePage> = ({ page, isCurrentPage, changePage }) => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `h-7 w-7 min-w-min text-center\r\n      rounded-sm border-2 border-${COLOR_MAIN}-600 dark:border-${COLOR_MAIN}-700\r\n      text-${COLOR_CONTRAST}-900 dark:text-${COLOR_CONTRAST}-300`,\r\n        isCurrentPage\r\n          ? `bg-${COLOR_MAIN}-600 dark:bg-${COLOR_MAIN}-700`\r\n          : `cursor-pointer \r\n            hover:bg-${COLOR_MAIN}-500 hover:dark:bg-${COLOR_MAIN}-600 \r\n      `\r\n      )}\r\n      onClick={isCurrentPage ? undefined : () => changePage(page)}\r\n    >\r\n      {page}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport OnePage from './OnePage';\r\nimport { TCollapsedPages } from './type';\r\nimport {\r\n  MdOutlineKeyboardDoubleArrowRight,\r\n  MdOutlineKeyboardDoubleArrowLeft,\r\n} from 'react-icons/md';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport { COLLAPSED_PAGES_STEP } from 'constants/enums/pageSizes';\r\n\r\n\r\nconst CollapsedPages: React.FC<TCollapsedPages> = (props) => {\r\n  const { pages, currentPage, changePage } = props;\r\n  const [pagesToDisplay, setPagesToDisplay] = useState(\r\n    pages.slice(0, COLLAPSED_PAGES_STEP)\r\n  );\r\n  const [isShowForwardArrow, setIsShowForwardArrow] = useState(true);\r\n\r\n  const lastPage = pages[pages.length - 1];\r\n\r\n  const nextPagesStack = () => {\r\n    const newPagesStack = [];\r\n    const stackEnd = pagesToDisplay[pagesToDisplay.length - 1];\r\n    const supposedStackEnd = stackEnd + COLLAPSED_PAGES_STEP;\r\n    const startNewStack = pages[pages.findIndex((page) => page === stackEnd)];\r\n\r\n    if (supposedStackEnd <= lastPage) {\r\n      for (\r\n        let i = startNewStack;\r\n        i < startNewStack + COLLAPSED_PAGES_STEP;\r\n        i++\r\n      ) {\r\n        newPagesStack.push(pages[i]);\r\n      }\r\n    } else {\r\n      for (let i = startNewStack; i < pages[pages.length - 1]; i++) {\r\n        newPagesStack.push(pages[i]);\r\n      }\r\n    }\r\n    if (supposedStackEnd >= lastPage) {\r\n      setIsShowForwardArrow(false);\r\n    }\r\n    setPagesToDisplay(newPagesStack);\r\n    changePage(newPagesStack[0]);\r\n  };\r\n\r\n  const previousPagesStack = () => {\r\n    const newPagesStack = [];\r\n    const stackStartIndex = pages.findIndex(\r\n      (page) => page === pagesToDisplay[0]\r\n    );\r\n    for (let i = 0; i < COLLAPSED_PAGES_STEP; i++) {\r\n      const newPage = pages[stackStartIndex - 1 - i];\r\n      newPagesStack.push(newPage);\r\n    }\r\n    if (!isShowForwardArrow) {\r\n      setIsShowForwardArrow(true);\r\n    }\r\n    changePage(newPagesStack[0]);\r\n    setPagesToDisplay(newPagesStack.reverse());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPagesToDisplay(pages.slice(0, COLLAPSED_PAGES_STEP));\r\n    setIsShowForwardArrow(true);\r\n  }, [pages.length]);\r\n\r\n  return (\r\n    <div className=\"flex space-x-1\">\r\n      {pagesToDisplay.map((page) => (\r\n        <OnePage\r\n          key={page}\r\n          page={page}\r\n          isCurrentPage={currentPage === page}\r\n          changePage={changePage}\r\n        />\r\n      ))}\r\n      <div className=\"flex space-x-1 px-2\">\r\n        {isShowForwardArrow && (\r\n          <div\r\n            className={`h-7 w-7 cursor-pointer flex items-center justify-center\r\n                        rounded-sm border-2 border-${COLOR_MAIN}-600 dark:border-${COLOR_MAIN}-700\r\n                        text-${COLOR_CONTRAST}-900 dark:text-${COLOR_CONTRAST}-300`}\r\n            onClick={nextPagesStack}\r\n          >\r\n            <MdOutlineKeyboardDoubleArrowRight />\r\n          </div>\r\n        )}\r\n        {pagesToDisplay[0] !== 1 && (\r\n          <div\r\n            className={`h-7 w-7 cursor-pointer flex items-center justify-center\r\n                        rounded-sm border-2 border-${COLOR_MAIN}-600 dark:border-${COLOR_MAIN}-700\r\n                        text-${COLOR_CONTRAST}-900 dark:text-${COLOR_CONTRAST}-300`}\r\n            onClick={previousPagesStack}\r\n          >\r\n            <MdOutlineKeyboardDoubleArrowLeft />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {pagesToDisplay[pagesToDisplay.length - 1] !== lastPage && (\r\n        <OnePage\r\n          key={lastPage}\r\n          page={lastPage}\r\n          isCurrentPage={currentPage === lastPage}\r\n          changePage={changePage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollapsedPages;\r\n","import React from 'react';\r\nimport OnePage from './OnePage';\r\nimport CollapsedPages from './CollapsedPages';\r\nimport { TPagination } from './type';\r\n\r\nconst Pagination: React.FC<TPagination> = (props) => {\r\n  const { totalPages, changePage, currentPage } = props;\r\n  const pages = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return totalPages !== 0 ? (\r\n    <div className=\"flex space-x-1 items-center\">\r\n      {\r\n        pages.length <= 7 ? (\r\n          pages.map((page) => (\r\n            <OnePage\r\n              key={page}\r\n              page={page}\r\n              isCurrentPage={currentPage === page}\r\n              changePage={changePage}\r\n            />\r\n          ))\r\n        ) : (\r\n          <CollapsedPages\r\n            pages={pages}\r\n            currentPage={currentPage}\r\n            changePage={changePage}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const FILED_TO_LOAD = \"Ошибка обращения к серверу: не получилось загрузить данные. Попробуйте позже.\"","import { COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport React from 'react';\r\nimport { TPicturePreview } from './type';\r\n\r\nconst PicturePreview: React.FC<TPicturePreview> = (props) => {\r\n  const { size } = props;\r\n  let dimentions = {\r\n    height: 0\r\n  };\r\n\r\n  switch (size) {\r\n    case 'xs':\r\n      dimentions.height = 16;\r\n      break;\r\n    case 'md':\r\n      dimentions.height = 36;\r\n      break;\r\n  }\r\n  return (\r\n    <div\r\n      className={`rounded h-${dimentions.height} w-full border-2\r\n    flex items-center justify-center \r\n    border-${COLOR_MAIN}-600 dark:border-${COLOR_MAIN}-700`}\r\n    >\r\n      <p\r\n        className={`text-4xl text-center align-middle\r\n      text-${COLOR_MAIN}-600 dark:text-${COLOR_MAIN}-700`}\r\n      >\r\n        ?\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PicturePreview;\r\n","import React from 'react';\r\nimport { TAlbumCard } from './type';\r\nimport { COLOR_CONTRAST } from 'constants/styles/colors.constants';\r\nimport { Tooltip } from 'react-tooltip';\r\nimport { useGetAlbumPhotoQuery } from 'services/api/albums';\r\nimport PicturePreview from 'components/picturePreview';\r\nimport { useGetUserByIdQuery } from 'services/api/users';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AlbumCard: React.FC<TAlbumCard> = ({ album }) => {\r\n  const limitPictures = 4;\r\n\r\n  const { data } = useGetAlbumPhotoQuery({\r\n    id: album.id,\r\n    limit: limitPictures,\r\n  });\r\n\r\n  const { data: userInfo } = useGetUserByIdQuery({ id: album.userId });\r\n\r\n  const notLoadedPictures = [];\r\n  for (let i = 0; i < limitPictures; i++) {\r\n    notLoadedPictures.push(i);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`max-w-md flex flex-col justify-between border rounded border-${COLOR_CONTRAST}-200 dark:border-${COLOR_CONTRAST}-500 m-2 px-4 py-2`}\r\n    >\r\n      <p\r\n        className={`dark:text-${COLOR_CONTRAST}-100 truncate`}\r\n        id={`albumId-${album.id}`}\r\n      >\r\n        {album.title}\r\n      </p>\r\n      <hr className=\"mb-2\" />\r\n      <Link\r\n        className=\"grid grid-rows-2 grid-cols-2 gap-2 justify-items-center\"\r\n        to={`${album.id}`}\r\n        state={{ albumName: album.title }}\r\n      >\r\n        {data && !!data.length\r\n          ? data.map((picture) => (\r\n              <img\r\n                key={picture.id}\r\n                src={picture.thumbnailUrl}\r\n                alt={picture.title}\r\n                className=\"rounded-md h-16 w-full object-cover\"\r\n              />\r\n            ))\r\n          : notLoadedPictures.map((item) => (\r\n              <PicturePreview\r\n                key={item}\r\n                size=\"xs\"\r\n              />\r\n            ))}\r\n      </Link>\r\n      <div className=\"mt-1 flex justify-between\">\r\n        <p className={`dark:text-${COLOR_CONTRAST}-100 truncate`}>автор:</p>\r\n        <p className={`dark:text-${COLOR_CONTRAST}-100 truncate`}>\r\n          {userInfo?.username ? userInfo.username : 'нет информации'}\r\n        </p>\r\n      </div>\r\n      <Tooltip\r\n        anchorSelect={`#albumId-${album.id}`}\r\n        content={album.title}\r\n        place=\"bottom\"\r\n        className={`dark:bg-${COLOR_CONTRAST}-500`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumCard;\r\n","import React from 'react';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport { useGetUsersQuery } from 'services/api/users';\r\nimport {\r\n  USERS_SELECT_DISABLED_OPTION,\r\n  USERS_SELECT_NO_USERS_OPTION,\r\n} from 'constants/enums/selectOptions';\r\nimport { TFilterByUser } from '../type';\r\n\r\n\r\nconst DropDownList: React.FC<TFilterByUser> = ({\r\n  filteredUserId,\r\n  changeUserHandler,\r\n}) => {\r\n  const { data, isFetching } = useGetUsersQuery();\r\n  //TODO сделать универсальный компонент?\r\n  return (\r\n    <div className={`h-7 flex grow md:grow-0`}>\r\n      {!!data && !isFetching && (\r\n        <select\r\n          value={filteredUserId}\r\n          onChange={(e) => changeUserHandler(+e.target.value)}\r\n          className={`px-2 focus:outline-none w-full\r\n                      bg-${COLOR_CONTRAST}-50 dark:bg-${COLOR_MAIN}-900 \r\n                      dark:text-${COLOR_CONTRAST}-200\r\n                      rounded-sm border border-${COLOR_CONTRAST}-200 dark:border-${COLOR_MAIN}-500 \r\n                      `}\r\n        >\r\n          {!!data.length ? (\r\n            <>\r\n              <option\r\n                disabled\r\n                hidden\r\n                value=\"\"\r\n                className={`disabled:text-${COLOR_MAIN}-100\r\n                            disabled:dark:text-${COLOR_CONTRAST}-100`}\r\n              >\r\n                {USERS_SELECT_DISABLED_OPTION}\r\n              </option>\r\n              {data.map((user) => (\r\n                <option\r\n                  value={user.id}\r\n                  key={user.id}\r\n                  className={`text-${COLOR_CONTRAST}-700 dark:text-${COLOR_CONTRAST}-200`}\r\n                >\r\n                  {user.username}\r\n                </option>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <option\r\n              disabled\r\n              selected\r\n            >\r\n              {USERS_SELECT_NO_USERS_OPTION}\r\n            </option>\r\n          )}\r\n        </select>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDownList;\r\n","export const USERS_SELECT_DISABLED_OPTION =\r\n  'выберите пользователя';\r\n\r\n  export const USERS_SELECT_NO_USERS_OPTION =\r\n  'невозможно отфильтровать по пользователю';","import React from 'react';\r\nimport DropDownList from './dropDownList';\r\nimport { TFilterByUser } from './type';\r\nimport { LuFilterX } from 'react-icons/lu';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\n\r\nconst FilterByUser: React.FC<TFilterByUser> = ({\r\n  filteredUserId,\r\n  changeUserHandler,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center\r\n                    justify-stretch md:justify-normal\">\r\n      <DropDownList\r\n        filteredUserId={filteredUserId}\r\n        changeUserHandler={changeUserHandler}\r\n      />\r\n      <div\r\n        className={`text-xl ml-2\r\n                    text-${COLOR_CONTRAST}-600 dark:text-${COLOR_MAIN}-600\r\n                    hover:text-red-600 dark:hover:text-red-800\r\n                    cursor-pointer`}\r\n      >\r\n        <LuFilterX onClick={() => changeUserHandler('')} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterByUser;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useGetAlbumsQuery } from 'services/api/albums';\r\nimport { useAppDispatch, useAppSelector } from 'utils/hooks/useRedux';\r\nimport AlbumCard from 'components/albumCard';\r\nimport PageSizeSelect from 'components/pageSizeSelect';\r\nimport Pagination from 'components/pagination';\r\nimport LoadingPage from 'components/loadingPage';\r\nimport Notification from 'components/notification';\r\nimport { changePage, setPagesTotal } from 'store/albumsSlice';\r\nimport { changeAlbumsPageSize } from 'store/pageSizesSlice';\r\nimport { PAGE_ALBUMS_SIZES } from 'constants/enums/pageSizes';\r\nimport { FILED_TO_LOAD } from 'constants/fixedText/notifications';\r\nimport FilterByUser from 'pages/albums/components/filterByUser';\r\nimport { TUrlParams } from './type';\r\n\r\nconst PageAlbums: React.FC = () => {\r\n  const pageSize = useAppSelector((state) => state.pageSizes.albums);\r\n  const currentPage = useAppSelector((state) => state.albums.page);\r\n  const totalPages = useAppSelector((state) => state.albums.pagesTotal);\r\n  const [filteredUser, setFilteredUser] = useState<number | ''>('');\r\n\r\n  const params: TUrlParams = {\r\n    _limit: pageSize.toString(),\r\n    _page: currentPage.toString(),\r\n  };\r\n\r\n  if (filteredUser !== '') {\r\n    params.userId = filteredUser.toString();\r\n  }\r\n\r\n  const urlParams = new URLSearchParams(params).toString();\r\n\r\n  const { data, isFetching } = useGetAlbumsQuery(urlParams, {\r\n    refetchOnMountOrArgChange: true,\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (data?.headers?.xTotalCount) {\r\n      const calcTotal = +data.headers.xTotalCount / pageSize;\r\n      dispatch(setPagesTotal(calcTotal));\r\n    }\r\n    return () => {\r\n      dispatch(setPagesTotal(0));\r\n    };\r\n  }, [data, dispatch, pageSize]);\r\n\r\n  \r\n  const onPageSizeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const value = +e.target.value as (typeof PAGE_ALBUMS_SIZES)[number];\r\n    dispatch(changeAlbumsPageSize(value));\r\n    dispatch(changePage(1));\r\n  };\r\n\r\n  const onPageChange = (page: number) => dispatch(changePage(page));\r\n\r\n  return (\r\n    <section className=\"w-4/5 mx-auto flex flex-col grow\">\r\n      <div className=\"my-6\">\r\n        <FilterByUser\r\n          filteredUserId={filteredUser}\r\n          changeUserHandler={(id) => setFilteredUser(id)}\r\n        />\r\n      </div>\r\n      <div className=\"flex flex-col justify-between grow\">\r\n        {isFetching && <LoadingPage />}\r\n        {!isFetching &&\r\n          !!data?.data &&\r\n          (!!data?.data?.length ? (\r\n            <>\r\n              <div className=\"grid grid-cols-grid-cards gap-3 py-6\">\r\n                {data.data.map((album) => (\r\n                  <AlbumCard\r\n                    key={album.id}\r\n                    album={album}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div className=\"flex flex-col lg:flex-row justify-between lg:space-x-3\">\r\n                <Pagination\r\n                  totalPages={totalPages}\r\n                  changePage={onPageChange}\r\n                  currentPage={currentPage}\r\n                />\r\n                <PageSizeSelect\r\n                  pageSizes={PAGE_ALBUMS_SIZES}\r\n                  pageSize={pageSize}\r\n                  onChange={onPageSizeChange}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Notification\r\n              msg={FILED_TO_LOAD}\r\n              size=\"xl\"\r\n              type={'error'}\r\n            />\r\n          ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PageAlbums;\r\n","import { api } from '..';\r\nimport {\r\n  TAlbumsResponse,\r\n  TAlbumsResponseWithHeaders,\r\n  TAlbumWithPhotoResponse,\r\n  TAlbumWithPhotoRequest,\r\n} from './type';\r\n\r\nexport const albumsApi = api.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getAlbums: build.query<TAlbumsResponseWithHeaders, string | void>({\r\n      query: (params) => ({\r\n        url: !!params ? `/albums?${params}` : '/albums',\r\n        method: 'GET',\r\n      }),\r\n      transformResponse: (response: TAlbumsResponse, meta) => {\r\n        const data = response;\r\n        const headers = {\r\n          xTotalCount: meta?.response?.headers.get('X-Total-Count'),\r\n        };\r\n        return { data, headers };\r\n      },\r\n      providesTags: ['Albums'],\r\n    }),\r\n    getAlbumPhoto: build.query<TAlbumWithPhotoResponse, TAlbumWithPhotoRequest>(\r\n      {\r\n        query: ({ id, limit }) => ({\r\n          url: !!limit\r\n            ? `/albums/${id}/photos?_limit=${limit}`\r\n            : `/albums/${id}/photos`,\r\n          method: 'GET',\r\n        }),\r\n      }\r\n    ),\r\n  }),\r\n});\r\n\r\nexport const { useGetAlbumsQuery, useGetAlbumPhotoQuery } = albumsApi;\r\n","import { api } from '..';\r\nimport { TUsersResponse, TUserRequest } from './type';\r\nimport { TUser } from 'types/user';\r\n\r\n\r\nexport const usersApi = api.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getUsers: build.query<TUsersResponse, void>({\r\n      query: () => ({\r\n        url: '/users',\r\n        method: 'GET',\r\n      }),\r\n      providesTags: ['Users'],\r\n    }),\r\n    getUserById: build.query<TUser, TUserRequest>({\r\n      query: ({ id }) => ({\r\n        url: `/users/${id}`,\r\n        method: 'GET',\r\n      }),\r\n      providesTags: ['Users'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetUsersQuery, useGetUserByIdQuery } = usersApi;\r\n"],"names":["_ref","icon","msg","size","type","_jsx","IoWarning","MdError","FaCircleInfo","_jsxs","className","concat","children","COLOR_MAIN","COLOR_CONTRAST","props","pageSizes","pageSize","onChange","defaultValue","e","map","option","page","isCurrentPage","changePage","classNames","onClick","undefined","pages","currentPage","_useState","useState","slice","COLLAPSED_PAGES_STEP","_useState2","_slicedToArray","pagesToDisplay","setPagesToDisplay","_useState3","_useState4","isShowForwardArrow","setIsShowForwardArrow","lastPage","length","useEffect","OnePage","newPagesStack","stackEnd","supposedStackEnd","startNewStack","findIndex","i","push","MdOutlineKeyboardDoubleArrowRight","stackStartIndex","newPage","reverse","MdOutlineKeyboardDoubleArrowLeft","totalPages","CollapsedPages","FILED_TO_LOAD","dimentions","height","album","data","useGetAlbumPhotoQuery","id","limit","userInfo","useGetUserByIdQuery","userId","notLoadedPictures","title","Link","to","state","albumName","picture","src","thumbnailUrl","alt","item","PicturePreview","username","Tooltip","anchorSelect","content","place","filteredUserId","changeUserHandler","_useGetUsersQuery","useGetUsersQuery","isFetching","value","target","_Fragment","disabled","hidden","user","selected","DropDownList","LuFilterX","_data$data","useAppSelector","albums","pagesTotal","filteredUser","setFilteredUser","params","_limit","toString","_page","urlParams","URLSearchParams","_useGetAlbumsQuery","useGetAlbumsQuery","refetchOnMountOrArgChange","dispatch","useAppDispatch","_data$headers","headers","xTotalCount","calcTotal","setPagesTotal","FilterByUser","LoadingPage","AlbumCard","Pagination","PageSizeSelect","PAGE_ALBUMS_SIZES","changeAlbumsPageSize","Notification","albumsApi","api","injectEndpoints","endpoints","build","getAlbums","query","url","method","transformResponse","response","meta","_meta$response","get","providesTags","getAlbumPhoto","usersApi","getUsers","getUserById"],"sourceRoot":""}