{"version":3,"file":"static/js/952.e8ac2728.chunk.js","mappings":"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","sources":["components/modal/index.tsx","components/pictureFullscreen/index.tsx","pages/album/index.tsx","services/api/albums/index.ts"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { TModalProps } from './type';\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport classNames from 'classnames';\r\n\r\nconst Modal: React.FC<TModalProps> = (props) => {\r\n  const { children, onClose, size } = props;\r\n  let top;\r\n  switch (size) {\r\n    case 'sm':\r\n      top = 'top-56';\r\n      break;\r\n    case 'md':\r\n      top = 'top-24';\r\n      break;\r\n  }\r\n\r\n  const handleKeypress = (e: KeyboardEvent) => {\r\n    if (e.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onCloseHandler = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeypress);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeypress);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const render = (\r\n    <div\r\n      className=\"fixed top-0 w-full h-full bg-[rgba(26,26,26,0.5)] dark:bg-[rgba(26,26,26,0.7)]\"\r\n      onClick={(e) => onCloseHandler(e)}\r\n    >\r\n      <div\r\n        className={classNames(\r\n          'h-100 w-min bg-white dark:bg-black bg-opacity-100 mx-auto p-5 rounded-md relative',\r\n          top\r\n        )}\r\n      >\r\n        <div className=\"absolute top-2 right-2 text-black dark:text-white hover:text-red-600 hover:dark:text-red-800\">\r\n          <IoMdClose\r\n            className=\"cursor-pointer\"\r\n            onClick={onClose}\r\n          />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <>{createPortal(render, document.body)}</>;\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { TPictureFullscreen } from './type';\r\nimport { HiArrowCircleLeft, HiArrowCircleRight } from 'react-icons/hi';\r\nimport { COLOR_CONTRAST, COLOR_MAIN } from 'constants/styles/colors.constants';\r\n\r\nconst PictureFullscreen: React.FC<TPictureFullscreen> = ({\r\n  picture,\r\n  title,\r\n  nextPicture,\r\n  previousPicture,\r\n  isFirst,\r\n  isLast,\r\n}) => {\r\n  const alter = picture?.slice(picture.lastIndexOf('/') + 1);\r\n\r\n  return (\r\n    <div className=\"p-5 pb-0 max-w-[90vw] max-h-[90vh]\">\r\n      <div\r\n        className=\"w-[600px] h-[600px] max-w-[80vw] max-h-[80vw] \"\r\n      >\r\n        <img\r\n          src={picture}\r\n          alt={`Просмотр изображения ${alter}`}\r\n        />\r\n      </div>\r\n      <div\r\n        className={`mt-5 flex justify-around text-4xl text-${COLOR_CONTRAST}-400 relative`}\r\n      >\r\n        {title && (\r\n          <div className=\"absolute block w-full top-[-1.5rem]\">\r\n            <h4 className=\"text-center text-lg first-letter:uppercase truncate\">\r\n              {title}\r\n            </h4>\r\n          </div>\r\n        )}\r\n        <div className=\"w-9 h-9\">\r\n          {!isFirst && (\r\n            <HiArrowCircleLeft\r\n              className={`cursor-pointer hover:text-${COLOR_MAIN}-700`}\r\n              onClick={previousPicture}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isLast ? (\r\n          <HiArrowCircleRight\r\n            className={`cursor-pointer hover:text-${COLOR_MAIN}-700`}\r\n            onClick={nextPicture}\r\n          />\r\n        ) : (\r\n          <div className=\"w-9 h-9\"></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PictureFullscreen;\r\n","import React, {useState } from 'react';\r\nimport { SlArrowRight } from 'react-icons/sl';\r\nimport { Link, Navigate, useLocation, useParams } from 'react-router-dom';\r\nimport { COLOR_MAIN } from 'constants/styles/colors.constants';\r\nimport { useGetAlbumPhotoQuery } from 'services/api/albums';\r\nimport { skipToken } from '@reduxjs/toolkit/query/react';\r\nimport Modal from 'components/modal';\r\nimport PictureFullscreen from 'components/pictureFullscreen';\r\nimport { TPictureToFullscreen } from './type';\r\n\r\nconst PageAlbum: React.FC = () => {\r\n  const [isFullscreenView, setFullscreenView] = useState(false);\r\n  const [pictureToFullscreen, setPictureToFullscreen] =\r\n    useState<TPictureToFullscreen | null>(null);\r\n\r\n\r\n  const { id } = useParams();\r\n  const { state: linkProps } = useLocation();\r\n\r\n  const { data } = useGetAlbumPhotoQuery(\r\n    {\r\n      id: (id as string) ?? skipToken,\r\n    },\r\n    { skip: !id }\r\n  );\r\n\r\n\r\n  const showFullscreen = (picture: TPictureToFullscreen) => {\r\n    setFullscreenView(true);\r\n    setPictureToFullscreen(picture);\r\n  };\r\n\r\n  const closeFullscreenView = () => {\r\n    setFullscreenView(false);\r\n    setPictureToFullscreen(null);\r\n  };\r\n\r\n  /**TODO можно объединить функции смены */\r\n  const nextPicture = () => {\r\n    if (data && !!data.length) {\r\n      const currentItem = data.findIndex(\r\n        (item) => item.id === pictureToFullscreen?.id\r\n      );\r\n      const nextItem = data[currentItem + 1];\r\n      if (nextItem) {\r\n        setPictureToFullscreen({\r\n          id: nextItem.id,\r\n          url: nextItem.url,\r\n          title: nextItem.title,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const previousPicture = () => {\r\n    if (data && !!data.length) {\r\n      const currentItem = data.findIndex(\r\n        (item) => item.id === pictureToFullscreen?.id\r\n      );\r\n      const previousItem = data[currentItem - 1];\r\n      if (previousItem) {\r\n        setPictureToFullscreen({\r\n          id: previousItem.id,\r\n          url: previousItem.url,\r\n          title: previousItem.title,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return linkProps?.albumName ? (\r\n    <section className='w-4/5 mx-auto'>\r\n      <div\r\n        className={`flex items-center\r\n          mt-5 space-x-2\r\n          text-${COLOR_MAIN}-600`}\r\n      >\r\n        <Link\r\n          to=\"/albums\"\r\n          className=\"underline\"\r\n        >\r\n          Альбомы\r\n        </Link>\r\n        <SlArrowRight />\r\n        <p>{linkProps.albumName}</p>\r\n      </div>\r\n      {data && !!data.length && (\r\n        <div className=\"my-5 grid grid-cols-grid-cards gap-5 justify-items-center\">\r\n          {data.map((picture) => (\r\n            <img\r\n              key={picture.id}\r\n              src={picture.thumbnailUrl}\r\n              alt={picture.title}\r\n              className=\"rounded-md h-36 w-full object-cover\r\n                         transform transition duration-400 hover:scale-110 cursor-pointer\"\r\n              onClick={() =>\r\n                showFullscreen({\r\n                  url: picture.url,\r\n                  id: picture.id,\r\n                  title: picture.title,\r\n                })\r\n              }\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n      {isFullscreenView && (\r\n        <Modal\r\n          children={\r\n            pictureToFullscreen ? (\r\n              <PictureFullscreen\r\n                picture={pictureToFullscreen.url}\r\n                title={pictureToFullscreen.title}\r\n                nextPicture={nextPicture}\r\n                previousPicture={previousPicture}\r\n                isFirst={\r\n                  data?.findIndex(\r\n                    (item) => item.id === pictureToFullscreen?.id\r\n                  ) === 0\r\n                }\r\n                isLast={\r\n                  data\r\n                    ? data.findIndex(\r\n                        (item) => item.id === pictureToFullscreen?.id\r\n                      ) ===\r\n                      data.length - 1\r\n                    : false\r\n                }\r\n              />\r\n            ) : null\r\n          }\r\n          onClose={closeFullscreenView}\r\n          size={'md'}\r\n        />\r\n      )}\r\n    </section>\r\n  ) : (\r\n    <Navigate to=\"/albums\" />\r\n  );\r\n};\r\n\r\nexport default PageAlbum;\r\n","import { api } from '..';\r\nimport {\r\n  TAlbumsResponse,\r\n  TAlbumsResponseWithHeaders,\r\n  TAlbumWithPhotoResponse,\r\n  TAlbumWithPhotoRequest,\r\n} from './type';\r\n\r\nexport const albumsApi = api.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getAlbums: build.query<TAlbumsResponseWithHeaders, string | void>({\r\n      query: (params) => ({\r\n        url: !!params ? `/albums?${params}` : '/albums',\r\n        method: 'GET',\r\n      }),\r\n      transformResponse: (response: TAlbumsResponse, meta) => {\r\n        const data = response;\r\n        const headers = {\r\n          xTotalCount: meta?.response?.headers.get('X-Total-Count'),\r\n        };\r\n        return { data, headers };\r\n      },\r\n      providesTags: ['Albums'],\r\n    }),\r\n    getAlbumPhoto: build.query<TAlbumWithPhotoResponse, TAlbumWithPhotoRequest>(\r\n      {\r\n        query: ({ id, limit }) => ({\r\n          url: !!limit\r\n            ? `/albums/${id}/photos?_limit=${limit}`\r\n            : `/albums/${id}/photos`,\r\n          method: 'GET',\r\n        }),\r\n      }\r\n    ),\r\n  }),\r\n});\r\n\r\nexport const { useGetAlbumsQuery, useGetAlbumPhotoQuery } = albumsApi;\r\n"],"names":["props","top","children","onClose","size","handleKeypress","e","key","useEffect","window","addEventListener","removeEventListener","render","_jsx","className","onClick","preventDefault","target","currentTarget","onCloseHandler","_jsxs","classNames","IoMdClose","_Fragment","createPortal","document","body","_ref","picture","title","nextPicture","previousPicture","isFirst","isLast","alter","slice","lastIndexOf","src","alt","concat","COLOR_CONTRAST","HiArrowCircleLeft","COLOR_MAIN","HiArrowCircleRight","_useState","useState","_useState2","_slicedToArray","isFullscreenView","setFullscreenView","_useState3","_useState4","pictureToFullscreen","setPictureToFullscreen","id","useParams","linkProps","useLocation","state","data","useGetAlbumPhotoQuery","skipToken","skip","albumName","Link","to","SlArrowRight","length","map","thumbnailUrl","showFullscreen","url","Modal","PictureFullscreen","currentItem","findIndex","item","nextItem","previousItem","Navigate","albumsApi","api","injectEndpoints","endpoints","build","getAlbums","query","params","method","transformResponse","response","meta","_meta$response","headers","xTotalCount","get","providesTags","getAlbumPhoto","limit","useGetAlbumsQuery"],"sourceRoot":""}